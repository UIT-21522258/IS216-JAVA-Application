/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.awt.event.ItemEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author GIA KIET
 */
public class PNS extends javax.swing.JFrame {

    /**
     * Creates new form PNS
     */
    public PNS() {
        initComponents();
        showNCC();
        showDSSP();
    }

    DefaultTableModel tb1 = new DefaultTableModel();
    DefaultTableModel tb2 = new DefaultTableModel();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SP = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DSSP = new javax.swing.JTable();
        ThemBtn = new javax.swing.JButton();
        NCC = new javax.swing.JComboBox<>();
        NgL = new javax.swing.JTextField();
        GC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("Ngay lap");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Ghi chu");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Nha cung cap");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("danh sach san pham");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("danh sach san pham nhap");

        SP.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        SP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        SP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SP);

        DSSP.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        DSSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(DSSP);

        ThemBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ThemBtn.setText("Them");
        ThemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemBtnActionPerformed(evt);
            }
        });

        NCC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        NCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        NCC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NCCItemStateChanged(evt);
            }
        });

        NgL.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        GC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(322, 322, 322)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(259, 259, 259))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NCC, 0, 200, Short.MAX_VALUE)
                            .addComponent(NgL)
                            .addComponent(GC))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(438, 438, 438)
                .addComponent(ThemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NgL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NCC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(ThemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NCCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NCCItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            showSP();
        }
    }//GEN-LAST:event_NCCItemStateChanged

    private void SPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SPMouseClicked
        // TODO add your handling code here:
        int selectedRow = SP.getSelectedRow();
        tb2 = (DefaultTableModel) DSSP.getModel();
        if(selectedRow >= 0 && selectedRow <= tb1.getRowCount()){
            Object[] row = new Object[2];
            String m = JOptionPane.showInputDialog(this, "Nhap so luong nhap");
            row[0] = tb1.getValueAt(selectedRow, 0);
            row[1] = m;
            tb2.addRow(row);
        }
    }//GEN-LAST:event_SPMouseClicked

    private void ThemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemBtnActionPerformed
        // TODO add your handling code here:
        if(NgL.getText().equals("") || GC.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Vui long nhap day du thong tin");
            return;
        } else {
            Connection con = null;
            try {
                con = ConnectDB.getConn();
            } catch(Exception e){
                e.printStackTrace();
            }
            String sql1 = "INSERT INTO PHIEUNHAP(NGAYLAP, GHICHU, TONGTIEN) VALUES (?, ?, 0)";
            int ck = 0;
            long sum = 0;
            String MPN = null;
            try {
                PreparedStatement ps = con.prepareStatement(sql1);
                ps.setString(1, NgL.getText());
                ps.setString(2, GC.getText());
                ck = ps.executeUpdate();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            if(ck > 0){
                String sql2 = "SELECT MAX(MAPN) FROM PHIEUNHAP";
                try {
                    PreparedStatement ps = con.prepareStatement(sql2);
                    ResultSet rs = ps.executeQuery();
                    if(rs.next()){
                        MPN = rs.getString("MAX(MAPN)");
                    }
                } catch(Exception e){
                    e.printStackTrace();
                }
                
                if(!MPN.isEmpty()){
                    int sl = tb2.getRowCount();
                    String MSP = null;
                    long gia = 0;
                    int slsp = 0;
                    for(int i =0; i < sl; i++){
                        String sql3 = "SELECT MASP, DONGIA FROM SANPHAM WHERE TENSP = ?";
                        try {
                            PreparedStatement ps = con.prepareStatement(sql3);
                            ps.setString(1, tb2.getValueAt(i, 0).toString());
                            ResultSet rs = ps.executeQuery();
                            if(rs.next()){
                                MSP = rs.getString("MASP");
                                gia = rs.getLong("DONGIA");
                            }
                        }catch(Exception e) {
                            e.printStackTrace();
                        }
                        
                        String sql4 = "INSERT INTO CT_NHAP(MAPN, MASP, SL) VALUES (?, ?, ?)";
                        try{
                            PreparedStatement ps = con.prepareStatement(sql4);
                            ps.setString(1, MPN);
                            ps.setString(2, MSP);
                            slsp = Integer.parseInt(tb2.getValueAt(i, 1).toString());
                            sum = sum + (gia * slsp);
                            ps.setInt(3, slsp);
                            int oke = ps.executeUpdate();
                            if(oke == 0)
                                JOptionPane.showMessageDialog(this, "Fail");
                        } catch(Exception e) {
                            e.printStackTrace();
                        }
                        
                        String sql5 = "UPDATE SANPHAM SET SOLUONG = ? WHERE MASP = ?";
                        try {
                            PreparedStatement ps = con.prepareStatement(sql5);
                            slsp = Integer.parseInt(tb2.getValueAt(i, 1).toString()) + getSL(MSP);
                            ps.setInt(1, slsp);
                            ps.setString(2, MSP);
                            int oke = ps.executeUpdate();
                            if(oke == 0)
                                JOptionPane.showMessageDialog(this, "Fail"); 
                        }catch(Exception e){
                            e.printStackTrace();
                        }
                    }
                    
                    if(sum > 0){
                        String sql = "UPDATE PHIEUNHAP SET TONGTIEN = ? WHERE MAPN = ?";
                        try {
                            PreparedStatement ps = con.prepareStatement(sql);
                            ps.setLong(1, sum);
                            ps.setString(2, MPN);
                            int oke = ps.executeUpdate();
                            if(oke > 0)
                            {
                                JOptionPane.showMessageDialog(this, "Success");
                                showDSSP();
                            }
                            else 
                                JOptionPane.showMessageDialog(this, "Fail");
                        }catch(Exception e){
                            e.printStackTrace();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail");
                    }
                }
            }
        }
    }//GEN-LAST:event_ThemBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void showNCC(){
        NCC.removeAllItems();
        Connection con = null;
        try {
            con = ConnectDB.getConn();
        } catch (Exception e) {
            e.printStackTrace();
        }
        String sql = "SELECT TENNCC FROM NHACC";
        ArrayList<String> data = new ArrayList();
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                data.add(rs.getString("TENNCC"));
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        
        for(String i : data){
            NCC.addItem(i);
        }
    }
    
    public void showDSSP(){
        tb2.setColumnIdentifiers(new String[]{"San pham", "So luong"});
        tb2.setRowCount(0);
        DSSP.setModel(tb2);
        DSSP.setRowHeight(30);
        setVisible(true);
    }
    
    public String getMaNCC(){
        Connection con = null;
        try{
            con = ConnectDB.getConn();
        } catch(Exception e) {
            e.printStackTrace();
        }
        String sql = "SELECT MANCC FROM NHACC WHERE TENNCC = ?";
        try{
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, NCC.getSelectedItem().toString());
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                return rs.getString("MANCC");
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public void showSP(){
        tb1.setColumnIdentifiers(new String[]{"San pham"});
        tb1.setRowCount(0);
        Connection con = null;
        try{
            con = ConnectDB.getConn();
        } catch(Exception e){
            e.printStackTrace();
        }
        String sql = "SELECT TENSP FROM SANPHAM WHERE MANCC = ?";
        try{
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, getMaNCC());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                tb1.addRow(new String[]{rs.getString("TENSP")});
            }
            SP.setModel(tb1);
            SP.setRowHeight(30);
        } catch(Exception e){
            e.printStackTrace();
        }
        setVisible(true);
    }
    
    public int getSL(String MSP){
        Connection con = null;
        try{
            con = ConnectDB.getConn();
        } catch(Exception e){
            e.printStackTrace();
        }
        
        String sql = "SELECT SOLUONG FROM SANPHAM WHERE MASP = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, MSP);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                return rs.getInt("SOLUONG");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PNS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DSSP;
    private javax.swing.JTextField GC;
    private javax.swing.JComboBox<String> NCC;
    private javax.swing.JTextField NgL;
    private javax.swing.JTable SP;
    private javax.swing.JButton ThemBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
